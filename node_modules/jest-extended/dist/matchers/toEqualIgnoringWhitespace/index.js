"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toEqualIgnoringWhitespace = toEqualIgnoringWhitespace;

var _predicate = _interopRequireDefault(require("./predicate"));

var _printUtil = require("./print-util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const passMessage = (utils, expected) => () => utils.matcherHint('.not.toEqualIgnoringWhitespace') + '\n\n' + 'Expected values to not be equal while ignoring white-space (using ===):\n' + `Expected: not  ${utils.EXPECTED_COLOR(expected)}\n\n`;

const failMessage = (utils, diff) => () => utils.matcherHint('.toEqualIgnoringWhitespace') + '\n\n' + 'Expected values to be equal while ignoring white-space (using ===):\n' + `Expected:\n  ${(0, _printUtil.printExpected)(utils, diff)}\n\n` + `Received:\n  ${(0, _printUtil.printReceived)(utils, diff)}`;

function toEqualIgnoringWhitespace(received, expected) {
  const {
    pass,
    diff
  } = (0, _predicate.default)(received, expected);
  return {
    pass: pass,
    message: pass ? passMessage(this.utils, expected) : failMessage(this.utils, diff),
    actual: received
  };
}